# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: 'Release'
  DX12: 'ON'
  VULKAN: 'OFF'


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Setup Windows 10 SDK Action
      uses: GuillaumeFalourd/setup-windows10-sdk-action@v2.4
      with:
        sdk-version: 26100
        
    - name: Checkout Repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Visual Studio environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake for x64
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -G "Visual Studio 17 2022" -A x64 -DCMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION=10.0.26100.0 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDONUT_WITH_DX12=${{env.DX12}} -DDONUT_WITH_VULKAN=${{env.VULKAN}} 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: rtxmg-build-artifacts-package
        path: ${{github.workspace}}/build/*.zip
        
    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

